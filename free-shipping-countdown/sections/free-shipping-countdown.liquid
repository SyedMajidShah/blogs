<script>
  class FreeShippingCountdown extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({mode: 'open'});
    }

    connectedCallback() {
      this.initEventListener();
      this.updateFreeShippingCountdown();
    }

    async getShopifyCart() {
      try {
        const response = await fetch('/cart.js', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const cartData = await response.json();
        return cartData;
      } catch (error) {
        console.error('Error fetching Shopify cart:', error);
      }
    }

    async updateFreeShippingCountdown() {
      const cart = await this.getShopifyCart();
      const threshold = {{ section.settings.free-shipping-countdown }} || 0
      if (threshold <= 0) return 

      const amountUntilFreeShipping = threshold - (cart.total_price / 100)

      const str = amountUntilFreeShipping > 0 ?
        `<p>$${amountUntilFreeShipping.toFixed(2)} amount until you hit free shipping</p>`
        :
        `<p>Congratulations, you have reached free shipping!</p>`

      this.shadowRoot.innerHTML = str
    }

    initEventListener() {
      document.addEventListener('cartUpdated', () => {
        this.updateFreeShippingCountdown();
      })
    }
  }

  customElements.define('free-shipping-countdown', FreeShippingCountdown)
</script>

{% schema %}
  {
    "name": "Free Shipping Countdown",
    "settings": [
      {
        "id": "free-shipping-countdown",
        "type": "text",
        "label": "Set the amount of $ for free shipping (no $ sign or commas)"
      }
    ]
  }
{% endschema %}