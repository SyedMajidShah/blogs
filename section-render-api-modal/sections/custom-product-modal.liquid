<style>
  /* Modal Styles */
  #custom-modal {
    /* position: fixed; */
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
  }

  /* Modal Content Styles */
  .custom-modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 50%;
    min-width: 450px;
    max-width: 600px;
    display: flex;
    border-radius: 4px;
  }

  /* Close Button Styles */
  .custom-close-modal {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .custom-close-modal:hover,
  .custom-close-modal:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  .shopify-section-template--21946272514334__image_banner {
    display: none;
  }


  /* flex stuff */
  .modal-left {
    flex: 1;
  }

  .modal-right {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .sneaky-submit {
    height: 40px;
    width: 110px;
  }

  .modal-rt {
    display: flex;
    flex: 1;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  #addToCartButton {
    background-color: rgba(var(--color-button), var(--alpha-button-background));
    appearance: none;
    border: 0;
    justify-content: center;
    align-items: center;
    padding: 0 3rem;
    font: inherit;
    text-decoration: none;
    color: rgb(var(--color-button-text));
    border-radius: 4px;
    cursor: pointer;
  }
</style>

<div
  class="section-id"
  id="modal-section"
  data-section="{{ section.id }}"
  style="display: none;">
  <div id="custom-modal" class="custom-modal">
    <!-- Modal Content -->
    <div class="custom-modal-content">
      <div class="modal-left">
        <!-- Product Title -->
        <h2>{{ product.title }}</h2>
        <!-- Product Images -->
        {{ product.featured_image | image_url: width: 300 | image_tag }}
      </div>
      <div class="modal-right">
        <div class="modal-rt">
          <p>{{ product.description }}</p>
          <p>{{ product.price | money }}</p>
        </div>
        <div class="modal-rb">
          <input
            type="hidden"
            name="id"
            id="get_product_id"
            value="{{ product.variants.first.id }}">
          <button id="addToCartButton">Add to Cart</button>
        </div>
      </div>
      <!-- custom-close-modal Button -->
      <span class="custom-close-modal">&times;</span>
    </div>
  </div>
</div>
<script>
  window.addEventListener("load", (event) => {
    async function openModal(html, shouldShow) {
      const modalHTML = html;
      if (shouldShow) {
          const replacingHTML = await document.querySelector("#modal-section");
          replacingHTML.outerHTML = html;
      }

      // Get references to the modal and close button
      const modal = document.getElementById("custom-modal");
      const closeButton =
        document.getElementsByClassName("custom-close-modal")[0];

      let tempy = document.querySelector("#modal-section")
      tempy.style.display = 'block'

    //   modal.style.display = "block";
      document.getElementById("custom-modal").style.position = "fixed";

      // Function to close the modal
      function closeModal() {
        modal.style.display = "none";
        modal.style.position = "static";
      }

      // Event listener for the close button
      closeButton.addEventListener("click", closeModal);

      // Event listener to close the modal when clicking outside of it

      window.addEventListener("click", function (event) {
        if (event.target == modal || event.target == closeButton) {
          closeModal();
        }
      });
    }

    document.addEventListener("click", async function (event) {
      if (event.target.matches(".modal-selector-quick-view")) {
        const targetData = event.target.dataset.target;
        let response = await fetch(
          `/products/${targetData}?section_id=template--22031678636318__custom_product_modal_VGDTKG`
        );
        let productMarkup = await response.text();
        openModal(productMarkup, true);
      } else if (event.target.matches('#addToCartButton')) {
        const id = document.querySelector('#get_product_id').value
        let formData = {
            'items': [{
            'id': id,
            'quantity': 1
            }]
            };
            fetch(window.Shopify.routes.root + 'cart/add.js', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
            })
            .then(response => {
                window.location.href = '/cart'
            return response.json();
            })
            .catch((error) => {
            console.error('Error:', error);
            });
      }
    });
  });
</script>
{% schema %}
  {
    "name": "Quick View Modal",
    "limit": 1,
    "settings": [
      {
        "type": "checkbox",
        "id": "title",
        "label": "Text"
      }
    ],
    "presets": [
      {
        "name": "Quick View Modal",
        "settings": {
          "title": "Quick View Modal"
        }
      }
    ],
    "enabled_on": {
      "templates": ["*"]
    }
  }
{% endschema %}